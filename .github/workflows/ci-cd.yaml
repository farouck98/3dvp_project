name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Utiliser l'image Ubuntu la plus récente

    steps:
      - name: Checkout du code
        uses: actions/checkout@v2  # Action pour récupérer le code source du dépôt

      - name: Installer Docker
        run: sudo apt-get update && sudo apt-get install -y docker.io  # Installer Docker sur l'image Ubuntu

      - name: Construire l'image Docker
        run: docker build -t 3dvp_project .  # Construire l'image Docker à partir du Dockerfile

      - name: Connexion à Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Utiliser les secrets GitHub pour le nom d'utilisateur Docker
          password: ${{ secrets.DOCKER_PASSWORD }}  # Utiliser les secrets GitHub pour le mot de passe Docker

      - name: Pousser l'image Docker vers Docker Hub
        run: |
          docker tag 3dvp_project ${{ secrets.DOCKER_USERNAME }}/3dvp_project:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/3dvp_project:latest

      - name: Déploiement sur le serveur
        run: |
          ssh user@server "docker pull ${{ secrets.DOCKER_USERNAME }}/3dvp_project:latest"  # Télécharger la dernière image Docker
          ssh user@server "docker stop 3dvp_container || true"  # Arrêter le conteneur s'il est en cours d'exécution
          ssh user@server "docker rm 3dvp_container || true"  # Supprimer le conteneur s'il existe
          ssh user@server "docker run -d --name 3dvp_container -p 80:80 ${{ secrets.DOCKER_USERNAME }}/3dvp_project:latest"  # Lancer le nouveau conteneur

